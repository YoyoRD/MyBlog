<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width,initial-scale=1"><title>AddressableAsset源码学习 | Yoyo</title><meta name="description" content="AddressableAsset源码学习笼统描述 Addressable Asset System 由两个结构组成。分别为:Addressables 和 ResourceManager  Addressables ：使用地址管理资源  ResourceManager : 管理资源加载卸载的框架    关键类AddressablesAddressables：静态类 包含AddressablesImp"><meta name="keywords" content="Unity,AddressableAsset,资源加载"><meta name="author" content="Yoyo"><meta name="copyright" content="Yoyo"><meta name="format-detection" content="telephone=no"><link rel="shortcut icon" href="/img/favicon.jpg"><link rel="canonical" href="https://yoyord.github.io/year/10/09/AddressableAsset%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0"><meta http-equiv="Cache-Control" content="no-transform"><meta http-equiv="Cache-Control" content="no-siteapp"><link rel="preconnect" href="//cdn.jsdelivr.net"/><link rel="preconnect" href="//fonts.googleapis.com" crossorigin="crossorigin"/><link rel="preconnect" href="//busuanzi.ibruce.info"/><link rel="preconnect" href="//zz.bdstatic.com"/><meta property="og:type" content="article"><meta property="og:title" content="AddressableAsset源码学习"><meta property="og:url" content="https://yoyord.github.io/year/10/09/AddressableAsset%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0"><meta property="og:site_name" content="Yoyo"><meta property="og:description" content="AddressableAsset源码学习笼统描述 Addressable Asset System 由两个结构组成。分别为:Addressables 和 ResourceManager  Addressables ：使用地址管理资源  ResourceManager : 管理资源加载卸载的框架    关键类AddressablesAddressables：静态类 包含AddressablesImp"><meta property="og:image" content="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"><meta property="article:published_time" content="2020-10-09T10:00:00.000Z"><meta property="article:modified_time" content="2020-10-09T10:00:00.000Z"><meta name="twitter:card" content="summary"><script>var activateDarkMode = function () {
  document.documentElement.setAttribute('data-theme', 'dark')
  if (document.querySelector('meta[name="theme-color"]') !== null) {
    document.querySelector('meta[name="theme-color"]').setAttribute('content', '#000')
  }
}
var activateLightMode = function () {
  document.documentElement.setAttribute('data-theme', 'light')
  if (document.querySelector('meta[name="theme-color"]') !== null) {
    document.querySelector('meta[name="theme-color"]').setAttribute('content', '#fff')
  }
}

var getCookies = function (name) {
  const value = `; ${document.cookie}`
  const parts = value.split(`; ${name}=`)
  if (parts.length === 2) return parts.pop().split(';').shift()
}

var autoChangeMode = 'false'
var t = getCookies('theme')
if (autoChangeMode === '1') {
  var isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches
  var isLightMode = window.matchMedia('(prefers-color-scheme: light)').matches
  var isNotSpecified = window.matchMedia('(prefers-color-scheme: no-preference)').matches
  var hasNoSupport = !isDarkMode && !isLightMode && !isNotSpecified

  if (t === undefined) {
    if (isLightMode) activateLightMode()
    else if (isDarkMode) activateDarkMode()
    else if (isNotSpecified || hasNoSupport) {
      console.log('You specified no preference for a color scheme or your browser does not support it. I Schedule dark mode during night time.')
      var now = new Date()
      var hour = now.getHours()
      var isNight = hour <= 6 || hour >= 18
      isNight ? activateDarkMode() : activateLightMode()
    }
    window.matchMedia('(prefers-color-scheme: dark)').addListener(function (e) {
      if (Cookies.get('theme') === undefined) {
        e.matches ? activateDarkMode() : activateLightMode()
      }
    })
  } else if (t === 'light') activateLightMode()
  else activateDarkMode()
} else if (autoChangeMode === '2') {
  now = new Date()
  hour = now.getHours()
  isNight = hour <= 6 || hour >= 18
  if (t === undefined) isNight ? activateDarkMode() : activateLightMode()
  else if (t === 'light') activateLightMode()
  else activateDarkMode()
} else {
  if (t === 'dark') activateDarkMode()
  else if (t === 'light') activateLightMode()
}</script><link rel="stylesheet" href="/css/index.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.css"><link rel="prev" title="渲染基础" href="https://yoyord.github.io/year/10/09/%E6%B8%B2%E6%9F%93%E5%9F%BA%E7%A1%80"><link rel="next" title="Hexo搭配GiteePages搭建个人博客" href="https://yoyord.github.io/year/10/09/Hexo%E6%90%AD%E9%85%8DGiteePages%E6%90%AD%E5%BB%BA"><link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Titillium+Web&amp;display=swap"><script>var GLOBAL_CONFIG = { 
  root: '/',
  algolia: undefined,
  localSearch: undefined,
  translate: {"defaultEncoding":2,"translateDelay":0,"msgToTraditionalChinese":"繁","msgToSimplifiedChinese":"簡"},
  noticeOutdate: {"limitDay":500,"position":"top","messagePrev":"It has been","messageNext":"days since the last update, the content of the article may be outdated."},
  copy: {
    success: '复制成功',
    error: '复制错误',
    noSupport: '浏览器不支持'
  },
  bookmark: {
    message_prev: '按',
    message_next: '键将本页加入书签'
  },
  runtime_unit: '天',
  runtime: false,
  copyright: undefined,
  ClickShowText: undefined,
  medium_zoom: true,
  fancybox: true,
  Snackbar: {"bookmark":{"message_prev":"按","message_next":"键将本页加入书签"},"chs_to_cht":"你已切换为繁体","cht_to_chs":"你已切换为简体","day_to_night":"你已切换为深色模式","night_to_day":"你已切换为浅色模式","bgLight":"#49b1f5","bgDark":"#121212","position":"bottom-left"},
  justifiedGallery: {
    js: 'https://cdn.jsdelivr.net/npm/justifiedGallery/dist/js/jquery.justifiedGallery.min.js',
    css: 'https://cdn.jsdelivr.net/npm/justifiedGallery/dist/css/justifiedGallery.min.css'
  },
  baiduPush: true,
  highlightCopy: true,
  highlightLang: true,
  isPhotoFigcaption: false,
  islazyload: true,
  isanchor: false    
}</script><script>var GLOBAL_CONFIG_SITE = { 
  isPost: true,
  isHome: false,
  isHighlightShrink: false,
  isSidebar: true,
  postUpdate: '2020-10-09 18:00:00'
}</script><noscript><style>
#nav {
  opacity: 1
}
.justified-gallery img{
  opacity: 1
}
</style></noscript><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css"><meta name="generator" content="Hexo 6.1.0"></head><body><div id="mobile-sidebar"><div id="menu_mask"></div><div id="mobile-sidebar-menus"><div class="mobile_author_icon"><img class="avatar-img" src="https://portrait.gitee.com/uploads/avatars/user/167/502893_Yoyo21_1578925881.png!avatar100" onerror="onerror=null;src='/img/friend_404.gif'" alt="avatar"/></div><div class="mobile_post_data"><div class="mobile_data_item is-center"><div class="mobile_data_link"><a href="/archives/"><div class="headline">文章</div><div class="length_num">24</div></a></div></div><div class="mobile_data_item is-center">      <div class="mobile_data_link"><a href="/tags/"><div class="headline">标签</div><div class="length_num">36</div></a></div></div></div><hr/><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><i class="fa-fw fa fa-home"></i><span> 首页</span></a></div><div class="menus_item"><a class="site-page" href="/archives/"><i class="fa-fw fa fa-archive"></i><span> 时间轴</span></a></div><div class="menus_item"><a class="site-page" href="/tags/"><i class="fa-fw fa fa-tags"></i><span> 标签</span></a></div><div class="menus_item"><a class="site-page" href="/categories/"><i class="fa-fw fa fa-folder-open"></i><span> 分类</span></a></div><div class="menus_item"><a class="site-page"><i class="fa-fw fas fa-list"></i><span> 媒体</span><i class="fas fa-chevron-down menus-expand"></i></a><ul class="menus_item_child"><li><a class="site-page" href="/bangumis/"><i class="fa-fw fab fa-youtube"></i><span> 番剧</span></a></li><li><a class="site-page" href="/movies/"><i class="fa-fw fa fa-film"></i><span> 电影</span></a></li><li><a class="site-page" href="/books/"><i class="fa-fw fas fa-book"></i><span> 书单</span></a></li><li><a class="site-page" href="/music/"><i class="fa-fw fa fa-music"></i><span> 音乐</span></a></li></ul></div></div></div></div><i class="fas fa-arrow-right on" id="toggle-sidebar"></i><div id="sidebar"><div class="sidebar-toc"><div class="sidebar-toc__title">目录</div><div class="sidebar-toc__progress"><span class="progress-notice">你已经读了</span><span class="progress-num">0</span><span class="progress-percentage">%</span><div class="sidebar-toc__progress-bar">     </div></div><div class="sidebar-toc__content"><ol class="toc"><li class="toc-item toc-level-1"><a class="toc-link" href="#AddressableAsset%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0"><span class="toc-number">1.</span> <span class="toc-text">AddressableAsset源码学习</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E7%AC%BC%E7%BB%9F%E6%8F%8F%E8%BF%B0"><span class="toc-number">1.1.</span> <span class="toc-text">笼统描述</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%85%B3%E9%94%AE%E7%B1%BB"><span class="toc-number">1.2.</span> <span class="toc-text">关键类</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#Addressables"><span class="toc-number">1.2.1.</span> <span class="toc-text">Addressables</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#Addressables%EF%BC%9A%E9%9D%99%E6%80%81%E7%B1%BB"><span class="toc-number">1.2.1.1.</span> <span class="toc-text">Addressables：静态类</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#AssetReference%EF%BC%9A%E8%B5%84%E6%BA%90%E5%AF%B9%E8%B1%A1%E7%B1%BB"><span class="toc-number">1.2.1.2.</span> <span class="toc-text">AssetReference：资源对象类</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#AddressablesImpl-Addressables%E7%9A%84%E5%AE%9E%E7%8E%B0%E7%B1%BB"><span class="toc-number">1.2.1.3.</span> <span class="toc-text">AddressablesImpl : Addressables的实现类</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#AsyncOperationHandle"><span class="toc-number">1.2.1.4.</span> <span class="toc-text">AsyncOperationHandle</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#ResourceManager"><span class="toc-number">1.2.2.</span> <span class="toc-text">ResourceManager</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#IResourceLocation"><span class="toc-number">1.2.2.1.</span> <span class="toc-text">IResourceLocation</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#IResourceProvider"><span class="toc-number">1.2.2.2.</span> <span class="toc-text">IResourceProvider</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#ResourceManager-1"><span class="toc-number">1.2.2.3.</span> <span class="toc-text">ResourceManager</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%AE%9E%E4%BE%8B%E5%8C%96%E6%B5%81%E7%A8%8B"><span class="toc-number">1.2.3.</span> <span class="toc-text">实例化流程</span></a></li></ol></li></ol></li></ol></div></div></div><div id="body-wrap"><div id="web_bg" data-type="photo"></div><header class="post-bg" id="page-header" style="background-image: url(https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg)"><nav id="nav"><span class="pull-left" id="blog_name"><a class="blog_title" id="site-name" href="/">Yoyo</a></span><span class="pull-right menus"><div class="menus_items"><div class="menus_item"><a class="site-page" href="/"><i class="fa-fw fa fa-home"></i><span> 首页</span></a></div><div class="menus_item"><a class="site-page" href="/archives/"><i class="fa-fw fa fa-archive"></i><span> 时间轴</span></a></div><div class="menus_item"><a class="site-page" href="/tags/"><i class="fa-fw fa fa-tags"></i><span> 标签</span></a></div><div class="menus_item"><a class="site-page" href="/categories/"><i class="fa-fw fa fa-folder-open"></i><span> 分类</span></a></div><div class="menus_item"><a class="site-page"><i class="fa-fw fas fa-list"></i><span> 媒体</span><i class="fas fa-chevron-down menus-expand"></i></a><ul class="menus_item_child"><li><a class="site-page" href="/bangumis/"><i class="fa-fw fab fa-youtube"></i><span> 番剧</span></a></li><li><a class="site-page" href="/movies/"><i class="fa-fw fa fa-film"></i><span> 电影</span></a></li><li><a class="site-page" href="/books/"><i class="fa-fw fas fa-book"></i><span> 书单</span></a></li><li><a class="site-page" href="/music/"><i class="fa-fw fa fa-music"></i><span> 音乐</span></a></li></ul></div></div><span class="toggle-menu close"><a class="site-page"><i class="fas fa-bars fa-fw"></i></a></span></span></nav><div id="post-info"><div id="post-title"><div class="posttitle">AddressableAsset源码学习</div></div><div id="post-meta"><div class="meta-firstline"><time class="post-meta__date"><span class="post-meta__date-created" title="发表于 2020-10-09 18:00:00"><i class="far fa-calendar-alt fa-fw"></i> 发表于 2020-10-09</span><span class="post-meta__separator">|</span><span class="post-meta__date-updated" title="更新于 2020-10-09 18:00:00"><i class="fas fa-history fa-fw"></i> 更新于 2020-10-09</span></time></div><div class="meta-secondline"> </div><div class="meta-thirdline"><span class="post-meta-pv-cv"><i class="far fa-eye fa-fw post-meta__icon"></i><span>阅读量:</span><span id="busuanzi_value_page_pv"></span></span></div></div></div></header><main class="layout_post" id="content-inner"><article id="post"><div class="post-content" id="article-container"><h1 id="AddressableAsset源码学习"><a href="#AddressableAsset源码学习" class="headerlink" title="AddressableAsset源码学习"></a>AddressableAsset源码学习</h1><h2 id="笼统描述"><a href="#笼统描述" class="headerlink" title="笼统描述"></a>笼统描述</h2><ul>
<li><p>Addressable Asset System 由两个结构组成。分别为:Addressables 和 ResourceManager</p>
</li>
<li><p>Addressables ：使用地址管理资源</p>
</li>
<li><p>ResourceManager : 管理资源加载卸载的框架</p>
</li>
</ul>
<hr>
<h2 id="关键类"><a href="#关键类" class="headerlink" title="关键类"></a>关键类</h2><h3 id="Addressables"><a href="#Addressables" class="headerlink" title="Addressables"></a>Addressables</h3><h4 id="Addressables：静态类"><a href="#Addressables：静态类" class="headerlink" title="Addressables：静态类"></a>Addressables：静态类</h4><ul>
<li><p>包含AddressablesImpl ，并构造 GC LRUCacheAllocationStrategy传过去 Impl接受参数为：IAllocationStrategy</p>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/Yoyo21/image-hosting/raw/master/img/image-20201009180303931.png" alt="image-20201009180303931"></p>
</li>
<li><p>UML图如下：</p>
</li>
</ul>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/Yoyo21/image-hosting/raw/master/img/image-20201009180315189.png" alt="image-20201009180315189"></p>
<ul>
<li>ResourceManager 与 InstanceProvider 都是在Impl类里面初始化</li>
</ul>
<h4 id="AssetReference：资源对象类"><a href="#AssetReference：资源对象类" class="headerlink" title="AssetReference：资源对象类"></a>AssetReference：资源对象类</h4><ul>
<li>基类声明资源唯一索引，资源名称，资源引用</li>
<li>方法:加载对象，异步加载对象，加载场景，异步加载场景</li>
<li>方法的实现在 AddressablesImpl类</li>
<li>UML图如下：</li>
</ul>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/Yoyo21/image-hosting/raw/master/img/image-20201009180340652.png" alt="image-20201009180340652"></p>
<h4 id="AddressablesImpl-Addressables的实现类"><a href="#AddressablesImpl-Addressables的实现类" class="headerlink" title="AddressablesImpl : Addressables的实现类"></a>AddressablesImpl : Addressables的实现类</h4><ul>
<li><p>持有并初始化 ResourceManager ，构造函数里面实现</p>
<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AddressablesImpl</span>(<span class="params">IAllocationStrategy alloc</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">m_ResourceManager = <span class="keyword">new</span> ResourceManager(alloc);</span><br><span class="line">SceneManager.sceneUnloaded += OnSceneUnloaded;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>持有 IInstanceProvider 它的初始化在 InitializationOperation.OnCatalogDataLoaded 也就是加载 LoadContentCatalogAsync 的时候初始化</p>
</li>
<li><p>对于属性 InstanceProvider 的初始化方法的时候 有个 接口 as 接口的地方</p>
<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> IInstanceProvider InstanceProvider</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">get</span></span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">return</span> m_InstanceProvider;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">set</span></span><br><span class="line">           &#123;</span><br><span class="line">               m_InstanceProvider = <span class="keyword">value</span>;</span><br><span class="line">               <span class="keyword">var</span> rec = m_InstanceProvider <span class="keyword">as</span> IUpdateReceiver;</span><br><span class="line">               <span class="keyword">if</span> (rec != <span class="literal">null</span>)</span><br><span class="line">                   m_ResourceManager.AddUpdateReceiver(rec);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<p>这个地方有个疑惑，我解释为：IInstanceProvider 的实例赋值过来， 判断实例是否继承 IUpdateReceiver接口 如果!&#x3D; null 则继承了</p>
</li>
<li><p>为资源定位器列表 有一些方法 包括 </p>
<ul>
<li>AddResourceLocator </li>
<li>RemoveResourceLocator</li>
<li>ClearResourceLocators</li>
<li>GetResourceLocations</li>
</ul>
<p>参数都带有 IResourceLocator 根据迭代器增删查</p>
</li>
<li><p>InitializeAsync ()是外部类调用AddressablesImpl 的实现方法 根据runtime路径和后缀限制，实例化</p>
</li>
<li><p>GetResourceLocations() 获取资源数据包列表</p>
</li>
<li><p>LoadContentCatalogAsync() 加载Catalog</p>
</li>
<li><p>LoadResourceLocationsWithChain() 加载依赖项数据列表</p>
</li>
<li><p>LoadAssetAsync()  加载单个资源</p>
</li>
<li><p>LoadAssetWithChain() 加载单个资源的依赖项</p>
</li>
<li><p>Release() 卸载资源和依赖项的方法</p>
</li>
<li><p>OnSceneUnloaded() LoadSceneWithChain() LoadSceneAsync() 场景加载的方法</p>
</li>
<li><p>UnloadSceneAsync()  UnloadSceneAsync() 卸载场景</p>
</li>
<li><p>UML图如下：</p>
</li>
</ul>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/Yoyo21/image-hosting/raw/master/img/image-20201009180355613.png" alt="image-20201009180355613"></p>
<h4 id="AsyncOperationHandle"><a href="#AsyncOperationHandle" class="headerlink" title="AsyncOperationHandle"></a>AsyncOperationHandle</h4><ul>
<li><p>Addressable的很多方法被调用后都会返回一个AsyncOperationHandle的结构体，可以得到当前的状态和结果。在没有调用Addressables.Release与Addressables.ReleaseInstance前，AsyncOperationHandle是一直有效的，包括其Status与Result中的值。</p>
</li>
<li><p>通过访问Status字段可以得知操作成功与否，Successed or Failed 。Successed 状态时可以访问Result</p>
</li>
<li><p>拿到的结果可以通过实时检测AsyncOperationHandle的状态值或者通过添加的回调AsyncOperationHandle.Complete</p>
</li>
<li><p>通常在外部接口都是操作Op，也就是IAsyncOperation 接口，去拿到AsyncOperationHandle的句柄，从而去拿到TOject</p>
<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    AsyncOperationHandle&lt;Texture2D&gt; textureHandle = Addressables.LoadAsset&lt;Texture2D&gt;(<span class="string">&quot;bg&quot;</span>);</span><br><span class="line">    textureHandle.Completed += OnCompleted;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCompleted</span>(<span class="params">AsyncOperationHandle&lt;Texture2D&gt; handle</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (handle.Status == AsyncOperationStatus.Succeeded)</span><br><span class="line">    &#123;</span><br><span class="line">        Texture2D result = handle.Result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<hr>
<ul>
<li>UML 如下图：</li>
</ul>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/Yoyo21/image-hosting/raw/master/img/image-20201009180412907.png" alt="image-20201009180412907"></p>
</li>
</ul>
<h3 id="ResourceManager"><a href="#ResourceManager" class="headerlink" title="ResourceManager"></a>ResourceManager</h3><ul>
<li>组成部分：<ul>
<li>ResourceLocation：具有资产位置和依赖性</li>
<li>ResourceProvider：实现资源加载&#x2F;卸载</li>
<li>SceneProvider：具有场景加载&#x2F;卸载场景</li>
<li>InstanceProvider：具有实例创建&#x2F;管理的实现</li>
</ul>
</li>
</ul>
<h4 id="IResourceLocation"><a href="#IResourceLocation" class="headerlink" title="IResourceLocation"></a>IResourceLocation</h4><ul>
<li><p>为所有的资源分配 IResourceLocation，并可以使用IResourceLocation访问到    </p>
<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> InternalId &#123; <span class="keyword">get</span>; &#125;：提供程序用于加载此位置的内部名称</span><br><span class="line"><span class="built_in">string</span> ProviderId &#123; <span class="keyword">get</span>; &#125;：与用于提供/加载此位置的提供程序匹配</span><br></pre></td></tr></table></figure>
</li>
<li><p>UML图如下：</p>
</li>
</ul>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/Yoyo21/image-hosting/raw/master/img/image-20201009180428626.png" alt="image-20201009180428626"></p>
<h4 id="IResourceProvider"><a href="#IResourceProvider" class="headerlink" title="IResourceProvider"></a>IResourceProvider</h4><ul>
<li>UML 图继承如下：</li>
</ul>
<p><img src= "/img/loading.gif" data-src="https://gitee.com/Yoyo21/image-hosting/raw/master/img/image-20201009180449846.png" alt="image-20201009180449846"></p>
<h4 id="ResourceManager-1"><a href="#ResourceManager-1" class="headerlink" title="ResourceManager"></a>ResourceManager</h4><ul>
<li>m_ResourceProviders :</li>
</ul>
<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ListWithEvents&lt;IResourceProvider&gt; m_ResourceProviders = <span class="keyword">new</span> ListWithEvents&lt;IResourceProvider&gt;();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>ProvideResource ：实例化provide 通过 ResourceLocation拿到AsyncOperationHandle句柄</p>
</li>
<li><p>通过传过来的ResourceLocation  转换Providers 成AsyncOperationHandle<TObject></p>
<h3 id="实例化流程"><a href="#实例化流程" class="headerlink" title="实例化流程"></a>实例化流程</h3></li>
<li><p>AssetReference or Addressables 去加载资源 or 实例化资源 都会从AddressablesImpl的方法体进入</p>
</li>
<li><p>并初始化ResourceManager 传递的 ResourceLocation  是object(string) 唯一key</p>
</li>
<li><p>AddressablesImpl 下的 InstantiateAsync() 会调用ResourceManager.ProvideInstance 去实例化一个Operation，这个Operation 其实是持有了 AsyncOperationBase 对象， 返回出AsyncOperationHandle<TObject> 可以通过Result 拿到对应的TObject。</p>
</li>
</ul>
</div><div class="post-copyright"><div class="post-copyright__author"><span class="post-copyright-meta">文章作者: </span><span class="post-copyright-info"><a href="mailto:undefined">Yoyo</a></span></div><div class="post-copyright__type"><span class="post-copyright-meta">文章链接: </span><span class="post-copyright-info"><a href="https://yoyord.github.io/year/10/09/AddressableAsset%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0">https://yoyord.github.io/year/10/09/AddressableAsset%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0</a></span></div><div class="post-copyright__notice"><span class="post-copyright-meta">版权声明: </span><span class="post-copyright-info">本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">CC BY-NC-SA 4.0</a> 许可协议。转载请注明来自 <a href="https://yoyord.github.io" target="_blank">Yoyo</a>！</span></div></div><div class="tag_share"><div class="post-meta__tag-list"><a class="post-meta__tags" href="/tags/Unity/">Unity</a><a class="post-meta__tags" href="/tags/AddressableAsset/">AddressableAsset</a><a class="post-meta__tags" href="/tags/%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD/">资源加载</a></div><div class="post_share"><div class="social-share" data-image="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg" data-sites="facebook,twitter,wechat,weibo,qq"></div><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/social-share.js/dist/css/share.min.css"/><script src="https://cdn.jsdelivr.net/npm/social-share.js/dist/js/social-share.min.js"></script></div></div><nav class="pagination-post" id="pagination"><div class="prev-post pull-left"><a href="/year/10/09/%E6%B8%B2%E6%9F%93%E5%9F%BA%E7%A1%80"><img class="prev-cover" data-src="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg" onerror="onerror=null;src='/img/404.jpg'"><div class="pagination-info"><div class="label">上一篇</div><div class="prev_info">渲染基础</div></div></a></div><div class="next-post pull-right"><a href="/year/10/09/Hexo%E6%90%AD%E9%85%8DGiteePages%E6%90%AD%E5%BB%BA"><img class="next-cover" data-src="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg" onerror="onerror=null;src='/img/404.jpg'"><div class="pagination-info"><div class="label">下一篇</div><div class="next_info">Hexo搭配GiteePages搭建个人博客</div></div></a></div></nav><div class="relatedPosts"><div class="relatedPosts_headline"><i class="fas fa-thumbs-up fa-fw"></i><span> 相关推荐</span></div><div class="relatedPosts_list"><div class="relatedPosts_item"><a href="/year/10/09/AddressableAsset Catalog分析" title="Addressable Asset Catalog分析"><img class="relatedPosts_cover" data-src="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"><div class="relatedPosts_main is-center"><div class="relatedPosts_date"><i class="far fa-calendar-alt fa-fw"></i> 2020-10-09</div><div class="relatedPosts_title">Addressable Asset Catalog分析</div></div></a></div><div class="relatedPosts_item"><a href="/year/10/29/AddressableAsset使用" title="AddressableAsset使用"><img class="relatedPosts_cover" data-src="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"><div class="relatedPosts_main is-center"><div class="relatedPosts_date"><i class="far fa-calendar-alt fa-fw"></i> 2020-10-29</div><div class="relatedPosts_title">AddressableAsset使用</div></div></a></div><div class="relatedPosts_item"><a href="/year/10/09/OdinInspector" title="Odin Inspector Editor"><img class="relatedPosts_cover" data-src="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"><div class="relatedPosts_main is-center"><div class="relatedPosts_date"><i class="far fa-calendar-alt fa-fw"></i> 2020-10-09</div><div class="relatedPosts_title">Odin Inspector Editor</div></div></a></div><div class="relatedPosts_item"><a href="/year/10/09/批量减FBX面片" title="Unity批量减FBX面片"><img class="relatedPosts_cover" data-src="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"><div class="relatedPosts_main is-center"><div class="relatedPosts_date"><i class="far fa-calendar-alt fa-fw"></i> 2020-10-09</div><div class="relatedPosts_title">Unity批量减FBX面片</div></div></a></div><div class="relatedPosts_item"><a href="/year/10/09/高性能Lua代码" title="高性能Lua代码"><img class="relatedPosts_cover" data-src="https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg"><div class="relatedPosts_main is-center"><div class="relatedPosts_date"><i class="far fa-calendar-alt fa-fw"></i> 2020-10-09</div><div class="relatedPosts_title">高性能Lua代码</div></div></a></div></div></div></article></main><footer id="footer" data-type="color"><div id="footer-wrap"><div class="copyright">&copy;2020 - 2022  <i id="heartbeat" class="fa fas fa-heartbeat"></i> Yoyo</div><div class="framework-info"><span>驱动 </span><a target="_blank" rel="noopener" href="https://hexo.io"><span>Hexo</span></a><span class="footer-separator">|</span><span>主题 </span><a target="_blank" rel="noopener" href="https://github.com/jerryc127/hexo-theme-butterfly"><span>Butterfly</span></a></div></div><head><link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/heartbeat.min.css"></head></footer></div><section id="rightside"><div id="rightside-config-hide"><button id="readmode" type="button" title="阅读模式"><i class="fas fa-book-open"></i></button><button id="font_plus" type="button" title="放大字体"><i class="fas fa-plus"></i></button><button id="font_minus" type="button" title="缩小字体"><i class="fas fa-minus"></i></button><button id="translateLink" type="button" title="简繁转换">繁</button><button id="darkmode" type="button" title="浅色和深色模式转换"><i class="fas fa-adjust"></i></button></div><div id="rightside-config-show"><button id="rightside_config" type="button" title="设置"><i class="fas fa-cog"></i></button><button class="close" id="mobile-toc-button" type="button" title="目录"><i class="fas fa-list-ul"></i></button><button id="go-up" type="button" title="回到顶部"><i class="fas fa-arrow-up"></i></button></div></section><script src="https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js"></script><script src="/js/utils.js"></script><script src="/js/main.js"></script><script src="/js/tw_cn.js"></script><script src="https://cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.min.js"></script><script src="https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js"></script><script src="https://cdn.jsdelivr.net/npm/node-snackbar/dist/snackbar.min.js"></script><script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script><script src="https://cdn.jsdelivr.net/npm/instant.page/instantpage.min.js" type="module" defer></script><script src="https://cdn.jsdelivr.net/npm/vanilla-lazyload/dist/lazyload.iife.min.js" async></script><script src="/js/calendar.js"></script><script src="/js/languages.js"></script></body></html>